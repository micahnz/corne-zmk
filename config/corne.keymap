#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        R_CTRL {
            bindings = <&kp RIGHT_CONTROL>;
            key-positions = <21 20>;
        };

        R_ALT {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <22 21>;
        };

        R_SHIFT {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <20 19>;
        };

        R_CTRL_SHIFT {
            bindings = <&kp RC(RIGHT_SHIFT)>;
            key-positions = <19 20 21>;
        };

        R_CTRL_ALT {
            bindings = <&kp RC(RIGHT_ALT)>;
            key-positions = <22 21 20>;
        };

        R_ALT_SHIFT {
            bindings = <&kp RA(LEFT_SHIFT)>;
            key-positions = <19 22>;
        };

        R_CTRL_ALT_SHIFT {
            bindings = <&kp RC(RA(RIGHT_SHIFT))>;
            key-positions = <19 20 21 22>;
        };

        R_GUI {
            bindings = <&kp RIGHT_GUI>;
            key-positions = <22 18>;
        };

        L_CTRL {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <14 15>;
        };

        L_ALT {
            bindings = <&kp LEFT_ALT>;
            key-positions = <13 14>;
        };

        L_SHIFT {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <16 15>;
        };

        L_CTRL_SHIFT {
            bindings = <&kp LC(LEFT_SHIFT)>;
            key-positions = <16 15 14>;
        };

        L_CTRL_ALT {
            bindings = <&kp LC(LEFT_ALT)>;
            key-positions = <13 14 15>;
        };

        L_ALT_SHIFT {
            bindings = <&kp LA(LEFT_SHIFT)>;
            key-positions = <13 16>;
        };

        L_CTRL_ALT_SHIFT {
            bindings = <&kp LC(LA(LEFT_SHIFT))>;
            key-positions = <13 14 15 16>;
        };

        L_GUI {
            bindings = <&kp LEFT_GUI>;
            key-positions = <13 17>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&none  &kp Q  &kp W  &kp F  &kp P  &kp B    &kp J  &kp L      &kp U      &kp Y    &kp BSPC   &none
&none  &kp A  &kp R  &kp S  &kp T  &kp G    &kp M  &kp N      &kp E      &kp I    &kp O      &none
&none  &kp Z  &kp X  &kp C  &kp V  &kp D    &kp K  &kp H      &kp COMMA  &kp DOT  &kp ENTER  &none
                     &mo 2  &mo 1  &mo 3    &mo 4  &kp SPACE  &mo 5
            >;
        };

        nav {
            bindings = <
&none  &none     &none     &none      &none      &none    &kp LC(Y)     &kp LC(V)       &kp LC(C)       &kp LC(X)     &kp LC(Z)        &none
&none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none    &kp CAPSLOCK  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none
&none  &none     &none     &none      &none      &none    &kp INSERT    &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &none
                           &none      &trans     &none    &none         &none           &none
            >;
        };

        media {
            bindings = <
&none  &bt BT_CLR    &none         &none         &none         &bootloader     &none       &none             &none              &none            &none       &none
&none  &kp LGUI      &kp LALT      &kp LCTRL     &kp LSHFT     &none           &none       &kp C_PREVIOUS    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none       &none             &none              &none            &none       &none
                                   &trans        &none         &none           &kp C_STOP  &kp C_PLAY_PAUSE  &kp C_MUTE
            >;
        };

        number {
            bindings = <
&none  &none     &none     &none      &none      &none     &kp LEFT_BRACKET  &kp N7  &kp N8   &kp N9  &kp RIGHT_BRACKET  &none
&none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none     &kp EQUAL         &kp N4  &kp N5   &kp N6  &kp SEMICOLON      &none
&none  &none     &none     &none      &none      &none     &kp BACKSLASH     &kp N1  &kp N2   &kp N3  &kp GRAVE          &none
                           &none      &none      &trans    &kp MINUS         &kp N0  &kp DOT
            >;
        };

        symbol {
            bindings = <
&none  &kp LEFT_BRACE  &kp AMPERSAND    &kp ASTERISK          &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &none   &none      &none      &none     &none     &none
&none  &kp COLON       &kp DOLLAR       &kp PERCENT           &kp CARET              &kp PLUS           &none   &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &none
&none  &kp TILDE       &kp EXCLAMATION  &kp AT_SIGN           &kp HASH               &kp PIPE           &none   &none      &none      &none     &none     &none
                                        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE     &trans  &none      &none
            >;
        };

        functions {
            bindings = <
&none  &kp F12  &kp F7  &kp F8  &kp F9  &kp PRINTSCREEN    &bootloader  &none      &none      &none     &none     &none
&none  &kp F11  &kp F4  &kp F5  &kp F6  &kp SCROLLLOCK     &none        &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &none
&none  &kp F10  &kp F1  &kp F2  &kp F3  &kp PAUSE_BREAK    &none        &none      &none      &none     &none     &none
                        &none   &none   &none              &none        &none      &trans
            >;
        };
    };
};
